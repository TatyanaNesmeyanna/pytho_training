{"name": "test_check_all_contacts_data", "status": "broken", "statusDetails": {"message": "pony.orm.core.BindingError: Database object was already bound to MySQL provider", "trace": "app = <fixture.application.Application object at 0x00000227CE456438>\n\n    def test_check_all_contacts_data(app):\n        if app.contact.count() == 0:\n            app.contact.create(Contact(firstname=\"firstname\", lastname=\"lastname\", address=\"address\",\n                                        home_phone=\"123\", work_phone=\"456\", mobile_phone=\"789\", secondary_phone=\"135\",\n                                            email1=\"1@gmail.com\", email2=\"2@gmail.com\", email3=\"3@gmail.com\"))\n        with allure.step('Given contact list from db and from homepage'):\n            contacts_from_homepage = sorted(app.contact.get_contact_list(),key=Contact.id_or_max)\n>           db = ORMFixture(host = \"127.0.0.1\", name = \"addressbook\", user = \"root\", password = \"\")\n\ntest\\test_check_all_contacts_data.py:15: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nfixture\\orm.py:34: in __init__\n    self.db.bind('mysql', host=host, database=name, user=user, password=password)\nenv\\lib\\site-packages\\pony\\orm\\core.py:765: in bind\n    self._bind(*args, **kwargs)\nenv\\lib\\site-packages\\pony\\orm\\core.py:769: in _bind\n    throw(BindingError, 'Database object was already bound to %s provider' % self.provider.dialect)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nexc_type = <class 'pony.orm.core.BindingError'>, args = ('Database object was already bound to MySQL provider',)\nkwargs = {}\n\n    def throw(exc_type, *args, **kwargs):\n        if isinstance(exc_type, Exception):\n            assert not args and not kwargs\n            exc = exc_type\n        else: exc = exc_type(*args, **kwargs)\n        exc.__cause__ = None\n        try:\n            if not (pony.MODE == 'INTERACTIVE' and options.CUT_TRACEBACK):\n>               raise exc\nE               pony.orm.core.BindingError: Database object was already bound to MySQL provider\n\nenv\\lib\\site-packages\\pony\\utils\\utils.py:106: BindingError"}, "steps": [{"name": "Given contact list from db and from homepage", "status": "broken", "statusDetails": {"message": "pony.orm.core.BindingError: Database object was already bound to MySQL provider\n", "trace": "  File \"C:\\Users\\tatyana\\PycharmProjects\\Devel\\test\\test_check_all_contacts_data.py\", line 15, in test_check_all_contacts_data\n    db = ORMFixture(host = \"127.0.0.1\", name = \"addressbook\", user = \"root\", password = \"\")\n  File \"C:\\Users\\tatyana\\PycharmProjects\\Devel\\fixture\\orm.py\", line 34, in __init__\n    self.db.bind('mysql', host=host, database=name, user=user, password=password)\n  File \"c:\\users\\tatyana\\pycharmprojects\\devel\\env\\lib\\site-packages\\pony\\orm\\core.py\", line 765, in bind\n    self._bind(*args, **kwargs)\n  File \"c:\\users\\tatyana\\pycharmprojects\\devel\\env\\lib\\site-packages\\pony\\orm\\core.py\", line 769, in _bind\n    throw(BindingError, 'Database object was already bound to %s provider' % self.provider.dialect)\n  File \"c:\\users\\tatyana\\pycharmprojects\\devel\\env\\lib\\site-packages\\pony\\utils\\utils.py\", line 106, in throw\n    raise exc\n"}, "start": 1571119296208, "stop": 1571119298609}], "start": 1571119295377, "stop": 1571119298614, "uuid": "07fd735c-d995-420a-b221-309d7047f244", "historyId": "51b8a8169c733cff673e7345e1efe413", "testCaseId": "1641952cbb2d7d5ea0b84b3f2044c96e", "fullName": "test.test_check_all_contacts_data#test_check_all_contacts_data", "labels": [{"name": "parentSuite", "value": "test"}, {"name": "suite", "value": "test_check_all_contacts_data"}, {"name": "host", "value": "DESKTOP-PPFJMEO"}, {"name": "thread", "value": "5648-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test.test_check_all_contacts_data"}]}