<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 2.9 (Python 3.7.0 on win32)" generated="20191014 23:34:43.069">
<suite id="s1" name="Group Scenarios" source="C:\Users\tatyana\PycharmProjects\Devel\rf\group_scenarios.robot">
<kw name="Init Fixtures" library="rf.AddressBook" type="setup">
<status status="PASS" starttime="20191014 23:34:43.326" endtime="20191014 23:34:48.143"></status>
</kw>
<test id="s1-t1" name="Add new group">
<kw name="Get Group List" library="rf.AddressBook">
<assign>
<var>${old_list}</var>
</assign>
<msg timestamp="20191014 23:34:48.147" level="INFO">${old_list} = [189:second_modified_name;;, 191:nameNNQiE jI;header53G89 5R80AVM;footerM08Xm, 192:name;headerZtRvXsy00o8x  Sq6;footerbFwWGqF, 193:namebpTCb FhN;header kj;footerCANWx 5iZ BuUq, 195:name;headerW1yBy;fo...</msg>
<status status="PASS" starttime="20191014 23:34:48.145" endtime="20191014 23:34:48.148"></status>
</kw>
<kw name="New Group" library="rf.AddressBook">
<arguments>
<arg>name1</arg>
<arg>headr1</arg>
<arg>footer1</arg>
</arguments>
<assign>
<var>${group}</var>
</assign>
<msg timestamp="20191014 23:34:48.149" level="INFO">${group} = None:name1;headr1;footer1</msg>
<status status="PASS" starttime="20191014 23:34:48.148" endtime="20191014 23:34:48.149"></status>
</kw>
<kw name="Create Group" library="rf.AddressBook">
<arguments>
<arg>${group}</arg>
</arguments>
<status status="PASS" starttime="20191014 23:34:48.149" endtime="20191014 23:34:50.977"></status>
</kw>
<kw name="Get Group List" library="rf.AddressBook">
<assign>
<var>${new_list}</var>
</assign>
<msg timestamp="20191014 23:34:50.982" level="INFO">${new_list} = [189:second_modified_name;;, 191:nameNNQiE jI;header53G89 5R80AVM;footerM08Xm, 192:name;headerZtRvXsy00o8x  Sq6;footerbFwWGqF, 193:namebpTCb FhN;header kj;footerCANWx 5iZ BuUq, 195:name;headerW1yBy;fo...</msg>
<status status="PASS" starttime="20191014 23:34:50.978" endtime="20191014 23:34:50.982"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${old_list}</arg>
<arg>${group}</arg>
</arguments>
<status status="PASS" starttime="20191014 23:34:50.983" endtime="20191014 23:34:50.985"></status>
</kw>
<kw name="Group Lists Should Be Equal" library="rf.AddressBook">
<arguments>
<arg>${new_list}</arg>
<arg>${old_list}</arg>
</arguments>
<status status="PASS" starttime="20191014 23:34:50.985" endtime="20191014 23:34:50.986"></status>
</kw>
<status status="PASS" starttime="20191014 23:34:48.143" endtime="20191014 23:34:50.986" critical="yes"></status>
</test>
<test id="s1-t2" name="Delete group">
<kw name="Get Group List" library="rf.AddressBook">
<assign>
<var>${old_list}</var>
</assign>
<msg timestamp="20191014 23:34:50.992" level="INFO">${old_list} = [189:second_modified_name;;, 191:nameNNQiE jI;header53G89 5R80AVM;footerM08Xm, 192:name;headerZtRvXsy00o8x  Sq6;footerbFwWGqF, 193:namebpTCb FhN;header kj;footerCANWx 5iZ BuUq, 195:name;headerW1yBy;fo...</msg>
<status status="PASS" starttime="20191014 23:34:50.990" endtime="20191014 23:34:50.992"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${old_list}</arg>
</arguments>
<assign>
<var>${len}</var>
</assign>
<msg timestamp="20191014 23:34:50.993" level="INFO">Length is 35</msg>
<msg timestamp="20191014 23:34:50.993" level="INFO">${len} = 35</msg>
<status status="PASS" starttime="20191014 23:34:50.993" endtime="20191014 23:34:50.993"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>random.randrange(${len})</arg>
<arg>random</arg>
</arguments>
<assign>
<var>${index}</var>
</assign>
<msg timestamp="20191014 23:34:51.003" level="INFO">${index} = 28</msg>
<status status="PASS" starttime="20191014 23:34:50.993" endtime="20191014 23:34:51.003"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${old_list}</arg>
<arg>${index}</arg>
</arguments>
<assign>
<var>${group}</var>
</assign>
<msg timestamp="20191014 23:34:51.007" level="INFO">${group} = 222:namemxks;headerw PPfL B3AwinF;footerTgheH</msg>
<status status="PASS" starttime="20191014 23:34:51.005" endtime="20191014 23:34:51.007"></status>
</kw>
<kw name="Delete Group" library="rf.AddressBook">
<arguments>
<arg>${group}</arg>
</arguments>
<status status="PASS" starttime="20191014 23:34:51.008" endtime="20191014 23:34:51.711"></status>
</kw>
<kw name="Get Group List" library="rf.AddressBook">
<assign>
<var>${new_list}</var>
</assign>
<msg timestamp="20191014 23:34:51.716" level="INFO">${new_list} = [189:second_modified_name;;, 191:nameNNQiE jI;header53G89 5R80AVM;footerM08Xm, 192:name;headerZtRvXsy00o8x  Sq6;footerbFwWGqF, 193:namebpTCb FhN;header kj;footerCANWx 5iZ BuUq, 195:name;headerW1yBy;fo...</msg>
<status status="PASS" starttime="20191014 23:34:51.712" endtime="20191014 23:34:51.717"></status>
</kw>
<kw name="Remove Values From List" library="Collections">
<doc>Removes all occurrences of given ``values`` from ``list``.</doc>
<arguments>
<arg>${old_list}</arg>
<arg>${group}</arg>
</arguments>
<status status="PASS" starttime="20191014 23:34:51.717" endtime="20191014 23:34:51.718"></status>
</kw>
<kw name="Group Lists Should Be Equal" library="rf.AddressBook">
<arguments>
<arg>${new_list}</arg>
<arg>${old_list}</arg>
</arguments>
<status status="PASS" starttime="20191014 23:34:51.718" endtime="20191014 23:34:51.718"></status>
</kw>
<status status="PASS" starttime="20191014 23:34:50.988" endtime="20191014 23:34:51.719" critical="yes"></status>
</test>
<kw name="Destroy Fixtures" library="rf.AddressBook" type="teardown">
<status status="PASS" starttime="20191014 23:34:51.723" endtime="20191014 23:34:54.010"></status>
</kw>
<status status="PASS" starttime="20191014 23:34:43.072" endtime="20191014 23:34:54.010"></status>
</suite>
<statistics>
<total>
<stat pass="2" fail="0">Critical Tests</stat>
<stat pass="2" fail="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="2" fail="0" id="s1" name="Group Scenarios">Group Scenarios</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
